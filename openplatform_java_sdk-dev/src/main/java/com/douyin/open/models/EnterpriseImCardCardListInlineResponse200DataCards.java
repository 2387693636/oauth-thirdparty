/*
 * 消息卡片列表
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.douyin.open.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * EnterpriseImCardCardListInlineResponse200DataCards
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-13T12:08:38.637650+08:00[Asia/Shanghai]")
public class EnterpriseImCardCardListInlineResponse200DataCards {
  @JsonProperty("card_id")
  private String cardId = null;

  @JsonProperty("card_type")
  private String cardType = null;

  @JsonProperty("content")
  private String content = null;

  /**
   * 审核状态（avaliable可使用,review审核中,reject审核不通过)
   */
  public enum StatusEnum {
    AVALIABLE("avaliable"),
    REVIEW("review"),
    REJECT("reject");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("reject_reason")
  private String rejectReason = null;

  public EnterpriseImCardCardListInlineResponse200DataCards cardId(String cardId) {
    this.cardId = cardId;
    return this;
  }

   /**
   * 卡片id
   * @return cardId
  **/
  @Schema(required = true, description = "卡片id")
  public String getCardId() {
    return cardId;
  }

  public void setCardId(String cardId) {
    this.cardId = cardId;
  }

  public EnterpriseImCardCardListInlineResponse200DataCards cardType(String cardType) {
    this.cardType = cardType;
    return this;
  }

   /**
   * 卡片类型
   * @return cardType
  **/
  @Schema(required = true, description = "卡片类型")
  public String getCardType() {
    return cardType;
  }

  public void setCardType(String cardType) {
    this.cardType = cardType;
  }

  public EnterpriseImCardCardListInlineResponse200DataCards content(String content) {
    this.content = content;
    return this;
  }

   /**
   * 卡片内容
   * @return content
  **/
  @Schema(required = true, description = "卡片内容")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public EnterpriseImCardCardListInlineResponse200DataCards status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * 审核状态（avaliable可使用,review审核中,reject审核不通过)
   * @return status
  **/
  @Schema(required = true, description = "审核状态（avaliable可使用,review审核中,reject审核不通过)")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public EnterpriseImCardCardListInlineResponse200DataCards rejectReason(String rejectReason) {
    this.rejectReason = rejectReason;
    return this;
  }

   /**
   * 审核不通过理由
   * @return rejectReason
  **/
  @Schema(description = "审核不通过理由")
  public String getRejectReason() {
    return rejectReason;
  }

  public void setRejectReason(String rejectReason) {
    this.rejectReason = rejectReason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnterpriseImCardCardListInlineResponse200DataCards inlineResponse200DataCards = (EnterpriseImCardCardListInlineResponse200DataCards) o;
    return Objects.equals(this.cardId, inlineResponse200DataCards.cardId) &&
        Objects.equals(this.cardType, inlineResponse200DataCards.cardType) &&
        Objects.equals(this.content, inlineResponse200DataCards.content) &&
        Objects.equals(this.status, inlineResponse200DataCards.status) &&
        Objects.equals(this.rejectReason, inlineResponse200DataCards.rejectReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardId, cardType, content, status, rejectReason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnterpriseImCardCardListInlineResponse200DataCards {\n");
    
    sb.append("    cardId: ").append(toIndentedString(cardId)).append("\n");
    sb.append("    cardType: ").append(toIndentedString(cardType)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    rejectReason: ").append(toIndentedString(rejectReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
