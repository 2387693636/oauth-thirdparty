/*
 * 创建消息卡片
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.douyin.open.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * EnterpriseImCardCardSaveH5
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-13T12:08:43.117611+08:00[Asia/Shanghai]")
public class EnterpriseImCardCardSaveH5 {
  @JsonProperty("text")
  private String text = null;

  @JsonProperty("media_id")
  private String mediaId = null;

  @JsonProperty("image_url")
  private String imageUrl = null;

  @JsonProperty("link_url")
  private String linkUrl = null;

  public EnterpriseImCardCardSaveH5 text(String text) {
    this.text = text;
    return this;
  }

   /**
   * 卡片内容
   * @return text
  **/
  @Schema(example = "卡片文本", required = true, description = "卡片内容")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public EnterpriseImCardCardSaveH5 mediaId(String mediaId) {
    this.mediaId = mediaId;
    return this;
  }

   /**
   * 图片的素材id，需已上传在素材库中，创建/更新时必传，查看接口不下发
   * @return mediaId
  **/
  @Schema(description = "图片的素材id，需已上传在素材库中，创建/更新时必传，查看接口不下发")
  public String getMediaId() {
    return mediaId;
  }

  public void setMediaId(String mediaId) {
    this.mediaId = mediaId;
  }

  public EnterpriseImCardCardSaveH5 imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * 创建成功后，调用查看接口会下发media_id对应的图片url
   * @return imageUrl
  **/
  @Schema(description = "创建成功后，调用查看接口会下发media_id对应的图片url")
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }

  public EnterpriseImCardCardSaveH5 linkUrl(String linkUrl) {
    this.linkUrl = linkUrl;
    return this;
  }

   /**
   * 点击后跳转url
   * @return linkUrl
  **/
  @Schema(example = "https://e.douyin.com", required = true, description = "点击后跳转url")
  public String getLinkUrl() {
    return linkUrl;
  }

  public void setLinkUrl(String linkUrl) {
    this.linkUrl = linkUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnterpriseImCardCardSaveH5 h5 = (EnterpriseImCardCardSaveH5) o;
    return Objects.equals(this.text, h5.text) &&
        Objects.equals(this.mediaId, h5.mediaId) &&
        Objects.equals(this.imageUrl, h5.imageUrl) &&
        Objects.equals(this.linkUrl, h5.linkUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(text, mediaId, imageUrl, linkUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnterpriseImCardCardSaveH5 {\n");
    
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    mediaId: ").append(toIndentedString(mediaId)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    linkUrl: ").append(toIndentedString(linkUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
