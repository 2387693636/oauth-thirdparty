/*
 * 
 * 获取用户的粉丝数据
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.douyin.open.models;

import java.util.Objects;
import java.util.Arrays;
import com.douyin.open.models.FansDataFansDataFansProfileDistribution;
import com.douyin.open.models.FansDataFansDataFansProfileFlowContribution;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * FansDataFansDataFansData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-13T12:05:56.403420+08:00[Asia/Shanghai]")
public class FansDataFansDataFansData {
  @JsonProperty("all_fans_num")
  private Integer allFansNum = null;

  @JsonProperty("gender_distributions")
  private List<FansDataFansDataFansProfileDistribution> genderDistributions = new ArrayList<>();

  @JsonProperty("age_distributions")
  private List<FansDataFansDataFansProfileDistribution> ageDistributions = new ArrayList<>();

  @JsonProperty("geographical_distributions")
  private List<FansDataFansDataFansProfileDistribution> geographicalDistributions = new ArrayList<>();

  @JsonProperty("active_days_distributions")
  private List<FansDataFansDataFansProfileDistribution> activeDaysDistributions = new ArrayList<>();

  @JsonProperty("device_distributions")
  private List<FansDataFansDataFansProfileDistribution> deviceDistributions = new ArrayList<>();

  @JsonProperty("interest_distributions")
  private List<FansDataFansDataFansProfileDistribution> interestDistributions = new ArrayList<>();

  @JsonProperty("flow_contributions")
  private List<FansDataFansDataFansProfileFlowContribution> flowContributions = new ArrayList<>();

  public FansDataFansDataFansData allFansNum(Integer allFansNum) {
    this.allFansNum = allFansNum;
    return this;
  }

   /**
   * 所有粉丝的数量
   * @return allFansNum
  **/
  @Schema(example = "10000", required = true, description = "所有粉丝的数量")
  public Integer getAllFansNum() {
    return allFansNum;
  }

  public void setAllFansNum(Integer allFansNum) {
    this.allFansNum = allFansNum;
  }

  public FansDataFansDataFansData genderDistributions(List<FansDataFansDataFansProfileDistribution> genderDistributions) {
    this.genderDistributions = genderDistributions;
    return this;
  }

  public FansDataFansDataFansData addGenderDistributionsItem(FansDataFansDataFansProfileDistribution genderDistributionsItem) {
    this.genderDistributions.add(genderDistributionsItem);
    return this;
  }

   /**
   * 粉丝性别分布 item: [\&quot;1\&quot;,\&quot;2\&quot;] (男:1,女:2)
   * @return genderDistributions
  **/
  @Schema(example = "[{\"item\":1,\"value\":6000},{\"item\":2,\"value\":4000}]", required = true, description = "粉丝性别分布 item: [\"1\",\"2\"] (男:1,女:2)")
  public List<FansDataFansDataFansProfileDistribution> getGenderDistributions() {
    return genderDistributions;
  }

  public void setGenderDistributions(List<FansDataFansDataFansProfileDistribution> genderDistributions) {
    this.genderDistributions = genderDistributions;
  }

  public FansDataFansDataFansData ageDistributions(List<FansDataFansDataFansProfileDistribution> ageDistributions) {
    this.ageDistributions = ageDistributions;
    return this;
  }

  public FansDataFansDataFansData addAgeDistributionsItem(FansDataFansDataFansProfileDistribution ageDistributionsItem) {
    this.ageDistributions.add(ageDistributionsItem);
    return this;
  }

   /**
   * 粉丝年龄分布 item: [\&quot;1-23\&quot;, \&quot;24-30\&quot;, \&quot;31-40\&quot;, \&quot;41-50\&quot;, \&quot;50-\&quot;]
   * @return ageDistributions
  **/
  @Schema(example = "[{\"item\":\"1-23\",\"value\":5000},{\"item\":\"24-30\",\"value\":3000},{\"item\":\"31-40\",\"value\":1000},{\"item\":\"41-50\",\"value\":600},{\"item\":\"50-\",\"value\":400}]", required = true, description = "粉丝年龄分布 item: [\"1-23\", \"24-30\", \"31-40\", \"41-50\", \"50-\"]")
  public List<FansDataFansDataFansProfileDistribution> getAgeDistributions() {
    return ageDistributions;
  }

  public void setAgeDistributions(List<FansDataFansDataFansProfileDistribution> ageDistributions) {
    this.ageDistributions = ageDistributions;
  }

  public FansDataFansDataFansData geographicalDistributions(List<FansDataFansDataFansProfileDistribution> geographicalDistributions) {
    this.geographicalDistributions = geographicalDistributions;
    return this;
  }

  public FansDataFansDataFansData addGeographicalDistributionsItem(FansDataFansDataFansProfileDistribution geographicalDistributionsItem) {
    this.geographicalDistributions.add(geographicalDistributionsItem);
    return this;
  }

   /**
   * 粉丝地域分布 item: [\&quot;北京\&quot;,\&quot;福建\&quot;,\&quot;香港\&quot;...]
   * @return geographicalDistributions
  **/
  @Schema(example = "[{\"item\":\"北京\",\"value\":6000},{\"item\":\"上海\",\"value\":4000}]", required = true, description = "粉丝地域分布 item: [\"北京\",\"福建\",\"香港\"...]")
  public List<FansDataFansDataFansProfileDistribution> getGeographicalDistributions() {
    return geographicalDistributions;
  }

  public void setGeographicalDistributions(List<FansDataFansDataFansProfileDistribution> geographicalDistributions) {
    this.geographicalDistributions = geographicalDistributions;
  }

  public FansDataFansDataFansData activeDaysDistributions(List<FansDataFansDataFansProfileDistribution> activeDaysDistributions) {
    this.activeDaysDistributions = activeDaysDistributions;
    return this;
  }

  public FansDataFansDataFansData addActiveDaysDistributionsItem(FansDataFansDataFansProfileDistribution activeDaysDistributionsItem) {
    this.activeDaysDistributions.add(activeDaysDistributionsItem);
    return this;
  }

   /**
   * 粉丝活跃天数分布 item: [\&quot;0-4\&quot;,\&quot;5~8\&quot;,\&quot;9~12\&quot;,\&quot;13~16\&quot;,\&quot;17~20\&quot;,\&quot;20+\&quot;]
   * @return activeDaysDistributions
  **/
  @Schema(example = "[{\"item\":\"0-4\",\"value\":1000},{\"item\":\"5~8\",\"value\":500},{\"item\":\"9~12\",\"value\":400},{\"item\":\"13~16\",\"value\":300},{\"item\":\"17~20\",\"value\":300},{\"item\":\"20+\",\"value\":300}]", required = true, description = "粉丝活跃天数分布 item: [\"0-4\",\"5~8\",\"9~12\",\"13~16\",\"17~20\",\"20+\"]")
  public List<FansDataFansDataFansProfileDistribution> getActiveDaysDistributions() {
    return activeDaysDistributions;
  }

  public void setActiveDaysDistributions(List<FansDataFansDataFansProfileDistribution> activeDaysDistributions) {
    this.activeDaysDistributions = activeDaysDistributions;
  }

  public FansDataFansDataFansData deviceDistributions(List<FansDataFansDataFansProfileDistribution> deviceDistributions) {
    this.deviceDistributions = deviceDistributions;
    return this;
  }

  public FansDataFansDataFansData addDeviceDistributionsItem(FansDataFansDataFansProfileDistribution deviceDistributionsItem) {
    this.deviceDistributions.add(deviceDistributionsItem);
    return this;
  }

   /**
   * 粉丝设备分布 item: [\&quot;苹果\&quot;,\&quot;华为\&quot;,\&quot;三星\&quot;,\&quot;小米\&quot;...]
   * @return deviceDistributions
  **/
  @Schema(example = "[{\"item\":\"苹果\",\"value\":500},{\"item\":\"华为\",\"value\":300}]", required = true, description = "粉丝设备分布 item: [\"苹果\",\"华为\",\"三星\",\"小米\"...]")
  public List<FansDataFansDataFansProfileDistribution> getDeviceDistributions() {
    return deviceDistributions;
  }

  public void setDeviceDistributions(List<FansDataFansDataFansProfileDistribution> deviceDistributions) {
    this.deviceDistributions = deviceDistributions;
  }

  public FansDataFansDataFansData interestDistributions(List<FansDataFansDataFansProfileDistribution> interestDistributions) {
    this.interestDistributions = interestDistributions;
    return this;
  }

  public FansDataFansDataFansData addInterestDistributionsItem(FansDataFansDataFansProfileDistribution interestDistributionsItem) {
    this.interestDistributions.add(interestDistributionsItem);
    return this;
  }

   /**
   * 粉丝兴趣分布 item: [\&quot;生活\&quot;\&quot;,\&quot;美食\&quot;,\&quot;旅行\&quot;...]
   * @return interestDistributions
  **/
  @Schema(example = "[{\"item\":\"时尚\",\"value\":1000},{\"item\":\"亲子\",\"value\":800},{\"item\":\"生活\",\"value\":500}]", required = true, description = "粉丝兴趣分布 item: [\"生活\"\",\"美食\",\"旅行\"...]")
  public List<FansDataFansDataFansProfileDistribution> getInterestDistributions() {
    return interestDistributions;
  }

  public void setInterestDistributions(List<FansDataFansDataFansProfileDistribution> interestDistributions) {
    this.interestDistributions = interestDistributions;
  }

  public FansDataFansDataFansData flowContributions(List<FansDataFansDataFansProfileFlowContribution> flowContributions) {
    this.flowContributions = flowContributions;
    return this;
  }

  public FansDataFansDataFansData addFlowContributionsItem(FansDataFansDataFansProfileFlowContribution flowContributionsItem) {
    this.flowContributions.add(flowContributionsItem);
    return this;
  }

   /**
   * 粉丝流量贡献 flow: [\&quot;vv\&quot;,\&quot;like_cnt\&quot;,\&quot;comment_cnt\&quot;,\&quot;share_video_cnt\&quot;]
   * @return flowContributions
  **/
  @Schema(example = "[{\"flow\":\"vv\",\"all_sum\":1000,\"fans_sum\":1000},{\"flow\":\"like_cnt\",\"all_sum\":800,\"fans_sum\":800},{\"flow\":\"comment_cnt\",\"all_sum\":500,\"fans_sum\":500},{\"flow\":\"share_video_cnt\",\"all_sum\":300,\"fans_sum\":300}]", required = true, description = "粉丝流量贡献 flow: [\"vv\",\"like_cnt\",\"comment_cnt\",\"share_video_cnt\"]")
  public List<FansDataFansDataFansProfileFlowContribution> getFlowContributions() {
    return flowContributions;
  }

  public void setFlowContributions(List<FansDataFansDataFansProfileFlowContribution> flowContributions) {
    this.flowContributions = flowContributions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FansDataFansDataFansData fansData = (FansDataFansDataFansData) o;
    return Objects.equals(this.allFansNum, fansData.allFansNum) &&
        Objects.equals(this.genderDistributions, fansData.genderDistributions) &&
        Objects.equals(this.ageDistributions, fansData.ageDistributions) &&
        Objects.equals(this.geographicalDistributions, fansData.geographicalDistributions) &&
        Objects.equals(this.activeDaysDistributions, fansData.activeDaysDistributions) &&
        Objects.equals(this.deviceDistributions, fansData.deviceDistributions) &&
        Objects.equals(this.interestDistributions, fansData.interestDistributions) &&
        Objects.equals(this.flowContributions, fansData.flowContributions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allFansNum, genderDistributions, ageDistributions, geographicalDistributions, activeDaysDistributions, deviceDistributions, interestDistributions, flowContributions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FansDataFansDataFansData {\n");
    
    sb.append("    allFansNum: ").append(toIndentedString(allFansNum)).append("\n");
    sb.append("    genderDistributions: ").append(toIndentedString(genderDistributions)).append("\n");
    sb.append("    ageDistributions: ").append(toIndentedString(ageDistributions)).append("\n");
    sb.append("    geographicalDistributions: ").append(toIndentedString(geographicalDistributions)).append("\n");
    sb.append("    activeDaysDistributions: ").append(toIndentedString(activeDaysDistributions)).append("\n");
    sb.append("    deviceDistributions: ").append(toIndentedString(deviceDistributions)).append("\n");
    sb.append("    interestDistributions: ").append(toIndentedString(interestDistributions)).append("\n");
    sb.append("    flowContributions: ").append(toIndentedString(flowContributions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
