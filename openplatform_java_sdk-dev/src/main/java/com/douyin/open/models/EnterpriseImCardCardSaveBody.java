/*
 * 创建消息卡片
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.douyin.open.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * EnterpriseImCardCardSaveBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-13T12:08:43.117611+08:00[Asia/Shanghai]")
public class EnterpriseImCardCardSaveBody {
  @JsonProperty("card_id")
  private String cardId = null;

  /**
   * 卡片类型:   * &#x60;question_list&#x60; - 问题列表   * &#x60;h5&#x60; - H5卡片类型（对应E平台图片链接) 
   */
  public enum CardTypeEnum {
    QUESTION_LIST("question_list"),
    H5("h5");

    private String value;

    CardTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static CardTypeEnum fromValue(String text) {
      for (CardTypeEnum b : CardTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("card_type")
  private CardTypeEnum cardType = null;

  @JsonProperty("content")
  private String content = null;

  public EnterpriseImCardCardSaveBody cardId(String cardId) {
    this.cardId = cardId;
    return this;
  }

   /**
   * 卡片id，创建时不传；更新时必传。同一个用户的卡片id不可重复
   * @return cardId
  **/
  @Schema(description = "卡片id，创建时不传；更新时必传。同一个用户的卡片id不可重复")
  public String getCardId() {
    return cardId;
  }

  public void setCardId(String cardId) {
    this.cardId = cardId;
  }

  public EnterpriseImCardCardSaveBody cardType(CardTypeEnum cardType) {
    this.cardType = cardType;
    return this;
  }

   /**
   * 卡片类型:   * &#x60;question_list&#x60; - 问题列表   * &#x60;h5&#x60; - H5卡片类型（对应E平台图片链接) 
   * @return cardType
  **/
  @Schema(example = "question_list", required = true, description = "卡片类型:   * `question_list` - 问题列表   * `h5` - H5卡片类型（对应E平台图片链接) ")
  public CardTypeEnum getCardType() {
    return cardType;
  }

  public void setCardType(CardTypeEnum cardType) {
    this.cardType = cardType;
  }

  public EnterpriseImCardCardSaveBody content(String content) {
    this.content = content;
    return this;
  }

   /**
   * &#x60;&#x60;&#x60; 卡片内容字段 json序列化成string， 具体schema如文档下方 &#x60;&#x60;&#x60; 
   * @return content
  **/
  @Schema(example = "{ \"text\": \"有什么疑问呢\", \"questions\": [ {\"name\":\"问题1\",\"text\":\"关键词1\"}, {\"name\":\"问题2\",\"text\":\"关键词2\"} ] }", required = true, description = "``` 卡片内容字段 json序列化成string， 具体schema如文档下方 ``` ")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnterpriseImCardCardSaveBody body = (EnterpriseImCardCardSaveBody) o;
    return Objects.equals(this.cardId, body.cardId) &&
        Objects.equals(this.cardType, body.cardType) &&
        Objects.equals(this.content, body.content);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardId, cardType, content);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnterpriseImCardCardSaveBody {\n");
    
    sb.append("    cardId: ").append(toIndentedString(cardId)).append("\n");
    sb.append("    cardType: ").append(toIndentedString(cardType)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
